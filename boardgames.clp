(deffacts BoardGames
	(game "Arcadia Quest" "semi-cooperative" "Fantasy/RPG")
	(game "Betrayal at House on the Hill" "semi-cooperative" "Horror/Tile Placement")
	(game "Coup" "competitive" "Bluffing/Party Game")
	(game "Dixit" "competitive" "Party Game")
	(game "Dominion" "competitive" "Deckbuilder")
	(game "Galaxy Trucker" "competitive" "Sci-Fi")
	(game "Roll Through the Ages: The Bronze Age" "competitive" "Civ Building")
	(game "The Settlers of Catan" "competitive" "Civ Building")
	(game "Sheriff of Nottingham" "competitive" "Bluffing")
	(game "Small World" "competitive" "Area Control")
	(game "Splendor" "competitive" "Economic")
	(game "Star Fluxx" "competitive" "Party Game")
	(game "Ticket to Ride" "competitive" "Train Barron Simulation")
	(game "Shadows over Camelot" "cooperative" "Fantasy/Bluffing")
	(game "Carcassonne" "competitive" "Tile placement")
	(game "Pandemic" "cooperative" "Area Control")
	(game "7 Wonders" "competitive" "Card Passing ")
	(game "Codenames" "cooperative" "Deduction/Party")
	(game "Hanabi" "cooperative" "Deduction/Memory")
	(game "Lords of Waterdeep" "competitive" "Fantasy/Resource Management")
	(game "Dead of Winter" "cooperative" "Zombies")
	(game "Five Tribes" "competitive" "Area Control")
	(game "Star Realms" "competitive" "Deckbuilder")
	(game "Quadropolis" "competitive" "Civ Building")
	(game "Chaos in the Old World" "semi-cooperative" "Area Control")
	(game "Bonanza" "competitive" "Party Game")
	(game "Apples to Apples" "competitive" "Party Game")
	(game "Secret Hitler" "team-based" "Bluffing/Party Game")
	(game "Deception: Murder in Hong Kong" "team-based" "Bluffing")
	(game "Sushi Go!" "competitive" "Card passing/Party")
	(game "Alien Frontiers" "competitive" "Sci-Fi/Diceroller/Area Control")
	(game "Clank" "competitive" "Dungeon/Fantasy/Deckbuilder")
)

(deffacts PlayerRange
	(player-range "Arcadia Quest" 2 4)
	(player-range "Betrayal at House on the Hill" 3 6)
	(player-range "Coup" 2 6)
	(player-range "Dixit" 3 6)
	(player-range "Dominion" 2 4)
	(player-range "Galaxy Trucker" 2 4)
	(player-range "Roll Through the Ages: The Bronze Age" 1 4)
	(player-range "The Settlers of Catan" 3 6)
	(player-range "Sheriff of Nottingham" 3 5)
	(player-range "Small World" 3 5)
	(player-range "Splendor" 2 4)
	(player-range "Star Fluxx" 2 6)
	(player-range "Ticket to Ride" 2 5)
	(player-range "Shadows over Camelot" 4 7)
	(player-range "Carcassonne" 2 5)
	(player-range "Pandemic" 2 4)
	(player-range "7 Wonders" 2 7)
	(player-range "Codenames" 2 8)
	(player-range "Hanabi" 2 5)
	(player-range "Lords of Waterdeep" 2 5)
	(player-range "Dead of Winter" 3 5)
	(player-range "Five Tribes" 2 4)
	(player-range "Star Realms" 2 2)
	(player-range "Quadropolis" 2 4)
	(player-range "Chaos in the Old World" 3 4)
	(player-range "Bonanza" 2 7)
	(player-range "Apples to Apples" 4 10)
	(player-range "Secret Hitler" 4 20)
	(player-range "Deception: Murder in Hong Kong" 5 10)
	(player-range "Sushi Go!" 3 8)
	(player-range "Alien Frontiers" 2 4)
	(player-range "Clank" 2 4)
)

;;

(defrule GetFilterCriteria
	?i <- (initial-fact)
	=>
	(printout t "Howdy. Let's work together to find out the best game for you to play at your next party." crlf)
	(printout t "Please enter the amount of people that you expect to play: ")
	(bind ?playerCount (read))
	(assert (player-count ?playerCount))
	(retract ?i)
)

(defrule FilterGamesList
	(game ?name)
	(player-range ?name ?min ?max)
	(player-count ?playerCount)
	(test (>= ?playerCount ?min))
	(test (<= ?playerCount ?max))
	=>
	(assert (valid-game ?name))
)

(defrule DebugPrint
	(valid-game ?name)
	=>
	(printout t "Valid game: " ?name crlf)
)
